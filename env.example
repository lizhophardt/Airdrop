# Copy this file to .env and configure your values:
# cp env.example .env

# Blockchain Configuration
GNOSIS_RPC_URL=https://rpc.gnosischain.com
WXHOPR_TOKEN_ADDRESS=0xD4fdec44DB9D44B8f2b6d529620f9C0C7066A2c1

# Wallet Security (choose one method)

# Option 1: Plain text private key (NOT RECOMMENDED for production)
PRIVATE_KEY=your_private_key_here

# Option 2: Encrypted private key (RECOMMENDED - AES-256-CBC with PBKDF2)
# To generate encrypted key, run: npm run encrypt-key
# Algorithm: AES-256-CBC with PBKDF2 (100,000 iterations, SHA-256)
# Format: salt:iv:encrypted_data (all hex-encoded)
# ENCRYPTED_PRIVATE_KEY=your_encrypted_key_from_script_output
# ENCRYPTION_PASSWORD=your_strong_password_min_12_chars

# Airdrop Amounts (in Wei)
AIRDROP_AMOUNT_WEI=10000000000000000
XDAI_AIRDROP_AMOUNT_WEI=10000000000000000

# Database Configuration
DATABASE_URL=postgresql://postgres:password@localhost:5432/cfp_funding_tool
DB_HOST=localhost
DB_PORT=5432
DB_NAME=cfp_funding_tool
DB_USER=postgres
DB_PASSWORD=password
DB_SSL=false

# Docker Database Configuration (for docker-compose)
# These variables are used by the PostgreSQL container in docker-compose.yml
POSTGRES_DB=cfp_funding_tool
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres_password

# Server
PORT=3000
NODE_ENV=development

# Legacy (for migration only)
SECRET_CODES=DontTellUncleSam,SecretCode123,HiddenTreasure
